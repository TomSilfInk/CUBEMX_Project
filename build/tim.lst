ARM GAS  /tmp/cchi0CAw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/tim.c"
  20              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_TIM_PWM_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_TIM_PWM_MspInit:
  28              	.LVL0:
  29              	.LFB136:
   1:Src/tim.c     **** /* USER CODE BEGIN Header */
   2:Src/tim.c     **** /**
   3:Src/tim.c     ****   ******************************************************************************
   4:Src/tim.c     ****   * @file    tim.c
   5:Src/tim.c     ****   * @brief   This file provides code for the configuration
   6:Src/tim.c     ****   *          of the TIM instances.
   7:Src/tim.c     ****   ******************************************************************************
   8:Src/tim.c     ****   * @attention
   9:Src/tim.c     ****   *
  10:Src/tim.c     ****   * Copyright (c) 2025 STMicroelectronics.
  11:Src/tim.c     ****   * All rights reserved.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/tim.c     ****   * in the root directory of this software component.
  15:Src/tim.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** /* USER CODE END Header */
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim1;
  28:Src/tim.c     **** TIM_HandleTypeDef htim3;
  29:Src/tim.c     **** 
ARM GAS  /tmp/cchi0CAw.s 			page 2


  30:Src/tim.c     **** /* TIM1 init function */
  31:Src/tim.c     **** void MX_TIM1_Init(void)
  32:Src/tim.c     **** {
  33:Src/tim.c     **** 
  34:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 0 */
  35:Src/tim.c     **** 
  36:Src/tim.c     ****   /* USER CODE END TIM1_Init 0 */
  37:Src/tim.c     **** 
  38:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  40:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  41:Src/tim.c     **** 
  42:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 1 */
  43:Src/tim.c     **** 
  44:Src/tim.c     ****   /* USER CODE END TIM1_Init 1 */
  45:Src/tim.c     ****   htim1.Instance = TIM1;
  46:Src/tim.c     ****   htim1.Init.Prescaler = 160;
  47:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  48:Src/tim.c     ****   htim1.Init.Period = 25000;
  49:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  50:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  51:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  52:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  53:Src/tim.c     ****   {
  54:Src/tim.c     ****     Error_Handler();
  55:Src/tim.c     ****   }
  56:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  57:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  58:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  59:Src/tim.c     ****   {
  60:Src/tim.c     ****     Error_Handler();
  61:Src/tim.c     ****   }
  62:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  63:Src/tim.c     ****   sConfigOC.Pulse = 1;
  64:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  65:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  66:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  67:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  68:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  69:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  70:Src/tim.c     ****   {
  71:Src/tim.c     ****     Error_Handler();
  72:Src/tim.c     ****   }
  73:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  74:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  75:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  76:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
  77:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  78:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  79:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  80:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  81:Src/tim.c     ****   {
  82:Src/tim.c     ****     Error_Handler();
  83:Src/tim.c     ****   }
  84:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 2 */
  85:Src/tim.c     **** 
  86:Src/tim.c     ****   /* USER CODE END TIM1_Init 2 */
ARM GAS  /tmp/cchi0CAw.s 			page 3


  87:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
  88:Src/tim.c     **** 
  89:Src/tim.c     **** }
  90:Src/tim.c     **** /* TIM3 init function */
  91:Src/tim.c     **** void MX_TIM3_Init(void)
  92:Src/tim.c     **** {
  93:Src/tim.c     **** 
  94:Src/tim.c     ****   /* USER CODE BEGIN TIM3_Init 0 */
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   /* USER CODE END TIM3_Init 0 */
  97:Src/tim.c     **** 
  98:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  99:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 100:Src/tim.c     **** 
 101:Src/tim.c     ****   /* USER CODE BEGIN TIM3_Init 1 */
 102:Src/tim.c     **** 
 103:Src/tim.c     ****   /* USER CODE END TIM3_Init 1 */
 104:Src/tim.c     ****   htim3.Instance = TIM3;
 105:Src/tim.c     ****   htim3.Init.Prescaler = 3231;
 106:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 107:Src/tim.c     ****   htim3.Init.Period = 99;
 108:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 109:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 110:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 111:Src/tim.c     ****   {
 112:Src/tim.c     ****     Error_Handler();
 113:Src/tim.c     ****   }
 114:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 115:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 116:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 117:Src/tim.c     ****   {
 118:Src/tim.c     ****     Error_Handler();
 119:Src/tim.c     ****   }
 120:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 121:Src/tim.c     ****   sConfigOC.Pulse = 5;
 122:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 123:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 124:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 125:Src/tim.c     ****   {
 126:Src/tim.c     ****     Error_Handler();
 127:Src/tim.c     ****   }
 128:Src/tim.c     ****   /* USER CODE BEGIN TIM3_Init 2 */
 129:Src/tim.c     **** 
 130:Src/tim.c     ****   /* USER CODE END TIM3_Init 2 */
 131:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 132:Src/tim.c     **** 
 133:Src/tim.c     **** }
 134:Src/tim.c     **** 
 135:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 136:Src/tim.c     **** {
  30              		.loc 1 136 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 136 1 is_stmt 0 view .LVU1
  36 0000 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cchi0CAw.s 			page 4


  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
 137:Src/tim.c     **** 
 138:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM1)
  39              		.loc 1 138 3 is_stmt 1 view .LVU2
  40              		.loc 1 138 19 is_stmt 0 view .LVU3
  41 0002 0368     		ldr	r3, [r0]
  42              		.loc 1 138 5 view .LVU4
  43 0004 104A     		ldr	r2, .L7
  44 0006 9342     		cmp	r3, r2
  45 0008 04D0     		beq	.L5
 139:Src/tim.c     ****   {
 140:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 141:Src/tim.c     **** 
 142:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 143:Src/tim.c     ****     /* TIM1 clock enable */
 144:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 145:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 146:Src/tim.c     **** 
 147:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 148:Src/tim.c     ****   }
 149:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM3)
  46              		.loc 1 149 8 is_stmt 1 view .LVU5
  47              		.loc 1 149 10 is_stmt 0 view .LVU6
  48 000a 104A     		ldr	r2, .L7+4
  49 000c 9342     		cmp	r3, r2
  50 000e 0ED0     		beq	.L6
  51              	.L1:
 150:Src/tim.c     ****   {
 151:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 152:Src/tim.c     **** 
 153:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 154:Src/tim.c     ****     /* TIM3 clock enable */
 155:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 156:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 157:Src/tim.c     **** 
 158:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 159:Src/tim.c     ****   }
 160:Src/tim.c     **** }
  52              		.loc 1 160 1 view .LVU7
  53 0010 02B0     		add	sp, sp, #8
  54              	.LCFI1:
  55              		.cfi_remember_state
  56              		.cfi_def_cfa_offset 0
  57              		@ sp needed
  58 0012 7047     		bx	lr
  59              	.L5:
  60              	.LCFI2:
  61              		.cfi_restore_state
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  62              		.loc 1 144 5 is_stmt 1 view .LVU8
  63              	.LBB2:
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  64              		.loc 1 144 5 view .LVU9
  65 0014 0023     		movs	r3, #0
  66 0016 0093     		str	r3, [sp]
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
ARM GAS  /tmp/cchi0CAw.s 			page 5


  67              		.loc 1 144 5 view .LVU10
  68 0018 0D4B     		ldr	r3, .L7+8
  69 001a 5A6C     		ldr	r2, [r3, #68]
  70 001c 42F00102 		orr	r2, r2, #1
  71 0020 5A64     		str	r2, [r3, #68]
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  72              		.loc 1 144 5 view .LVU11
  73 0022 5B6C     		ldr	r3, [r3, #68]
  74 0024 03F00103 		and	r3, r3, #1
  75 0028 0093     		str	r3, [sp]
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  76              		.loc 1 144 5 view .LVU12
  77 002a 009B     		ldr	r3, [sp]
  78              	.LBE2:
 144:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  79              		.loc 1 144 5 view .LVU13
  80 002c F0E7     		b	.L1
  81              	.L6:
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  82              		.loc 1 155 5 view .LVU14
  83              	.LBB3:
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  84              		.loc 1 155 5 view .LVU15
  85 002e 0023     		movs	r3, #0
  86 0030 0193     		str	r3, [sp, #4]
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  87              		.loc 1 155 5 view .LVU16
  88 0032 074B     		ldr	r3, .L7+8
  89 0034 1A6C     		ldr	r2, [r3, #64]
  90 0036 42F00202 		orr	r2, r2, #2
  91 003a 1A64     		str	r2, [r3, #64]
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  92              		.loc 1 155 5 view .LVU17
  93 003c 1B6C     		ldr	r3, [r3, #64]
  94 003e 03F00203 		and	r3, r3, #2
  95 0042 0193     		str	r3, [sp, #4]
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  96              		.loc 1 155 5 view .LVU18
  97 0044 019B     		ldr	r3, [sp, #4]
  98              	.LBE3:
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  99              		.loc 1 155 5 discriminator 1 view .LVU19
 100              		.loc 1 160 1 is_stmt 0 view .LVU20
 101 0046 E3E7     		b	.L1
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 0048 00000140 		.word	1073807360
 106 004c 00040040 		.word	1073742848
 107 0050 00380240 		.word	1073887232
 108              		.cfi_endproc
 109              	.LFE136:
 111              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 112              		.align	1
 113              		.global	HAL_TIM_MspPostInit
 114              		.syntax unified
 115              		.thumb
ARM GAS  /tmp/cchi0CAw.s 			page 6


 116              		.thumb_func
 118              	HAL_TIM_MspPostInit:
 119              	.LVL1:
 120              	.LFB137:
 161:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 162:Src/tim.c     **** {
 121              		.loc 1 162 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 32
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		.loc 1 162 1 is_stmt 0 view .LVU22
 126 0000 00B5     		push	{lr}
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 14, -4
 130 0002 89B0     		sub	sp, sp, #36
 131              	.LCFI4:
 132              		.cfi_def_cfa_offset 40
 163:Src/tim.c     **** 
 164:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 133              		.loc 1 164 3 is_stmt 1 view .LVU23
 134              		.loc 1 164 20 is_stmt 0 view .LVU24
 135 0004 0023     		movs	r3, #0
 136 0006 0393     		str	r3, [sp, #12]
 137 0008 0493     		str	r3, [sp, #16]
 138 000a 0593     		str	r3, [sp, #20]
 139 000c 0693     		str	r3, [sp, #24]
 140 000e 0793     		str	r3, [sp, #28]
 165:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 141              		.loc 1 165 3 is_stmt 1 view .LVU25
 142              		.loc 1 165 15 is_stmt 0 view .LVU26
 143 0010 0368     		ldr	r3, [r0]
 144              		.loc 1 165 5 view .LVU27
 145 0012 1B4A     		ldr	r2, .L15
 146 0014 9342     		cmp	r3, r2
 147 0016 05D0     		beq	.L13
 166:Src/tim.c     ****   {
 167:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 168:Src/tim.c     **** 
 169:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 170:Src/tim.c     ****     __HAL_RCC_GPIOE_CLK_ENABLE();
 171:Src/tim.c     ****     /**TIM1 GPIO Configuration
 172:Src/tim.c     ****     PE9     ------> TIM1_CH1
 173:Src/tim.c     ****     */
 174:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 175:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 176:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 177:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 178:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 179:Src/tim.c     ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 180:Src/tim.c     **** 
 181:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 184:Src/tim.c     ****   }
 185:Src/tim.c     ****   else if(timHandle->Instance==TIM3)
 148              		.loc 1 185 8 is_stmt 1 view .LVU28
ARM GAS  /tmp/cchi0CAw.s 			page 7


 149              		.loc 1 185 10 is_stmt 0 view .LVU29
 150 0018 1A4A     		ldr	r2, .L15+4
 151 001a 9342     		cmp	r3, r2
 152 001c 1AD0     		beq	.L14
 153              	.LVL2:
 154              	.L9:
 186:Src/tim.c     ****   {
 187:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 188:Src/tim.c     **** 
 189:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 190:Src/tim.c     **** 
 191:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 192:Src/tim.c     ****     /**TIM3 GPIO Configuration
 193:Src/tim.c     ****     PA6     ------> TIM3_CH1
 194:Src/tim.c     ****     */
 195:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 196:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 197:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 198:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 199:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 200:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 201:Src/tim.c     **** 
 202:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 203:Src/tim.c     **** 
 204:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 205:Src/tim.c     ****   }
 206:Src/tim.c     **** 
 207:Src/tim.c     **** }
 155              		.loc 1 207 1 view .LVU30
 156 001e 09B0     		add	sp, sp, #36
 157              	.LCFI5:
 158              		.cfi_remember_state
 159              		.cfi_def_cfa_offset 4
 160              		@ sp needed
 161 0020 5DF804FB 		ldr	pc, [sp], #4
 162              	.LVL3:
 163              	.L13:
 164              	.LCFI6:
 165              		.cfi_restore_state
 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 166              		.loc 1 170 5 is_stmt 1 view .LVU31
 167              	.LBB4:
 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 168              		.loc 1 170 5 view .LVU32
 169 0024 0023     		movs	r3, #0
 170 0026 0193     		str	r3, [sp, #4]
 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 171              		.loc 1 170 5 view .LVU33
 172 0028 174B     		ldr	r3, .L15+8
 173 002a 1A6B     		ldr	r2, [r3, #48]
 174 002c 42F01002 		orr	r2, r2, #16
 175 0030 1A63     		str	r2, [r3, #48]
 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 176              		.loc 1 170 5 view .LVU34
 177 0032 1B6B     		ldr	r3, [r3, #48]
 178 0034 03F01003 		and	r3, r3, #16
 179 0038 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cchi0CAw.s 			page 8


 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 180              		.loc 1 170 5 view .LVU35
 181 003a 019B     		ldr	r3, [sp, #4]
 182              	.LBE4:
 170:Src/tim.c     ****     /**TIM1 GPIO Configuration
 183              		.loc 1 170 5 view .LVU36
 174:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 184              		.loc 1 174 5 view .LVU37
 174:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 185              		.loc 1 174 25 is_stmt 0 view .LVU38
 186 003c 4FF40073 		mov	r3, #512
 187 0040 0393     		str	r3, [sp, #12]
 175:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 175 5 is_stmt 1 view .LVU39
 175:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 189              		.loc 1 175 26 is_stmt 0 view .LVU40
 190 0042 0223     		movs	r3, #2
 191 0044 0493     		str	r3, [sp, #16]
 176:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 192              		.loc 1 176 5 is_stmt 1 view .LVU41
 177:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 193              		.loc 1 177 5 view .LVU42
 178:Src/tim.c     ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 194              		.loc 1 178 5 view .LVU43
 178:Src/tim.c     ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 195              		.loc 1 178 31 is_stmt 0 view .LVU44
 196 0046 0123     		movs	r3, #1
 197 0048 0793     		str	r3, [sp, #28]
 179:Src/tim.c     **** 
 198              		.loc 1 179 5 is_stmt 1 view .LVU45
 199 004a 03A9     		add	r1, sp, #12
 200 004c 0F48     		ldr	r0, .L15+12
 201              	.LVL4:
 179:Src/tim.c     **** 
 202              		.loc 1 179 5 is_stmt 0 view .LVU46
 203 004e FFF7FEFF 		bl	HAL_GPIO_Init
 204              	.LVL5:
 205 0052 E4E7     		b	.L9
 206              	.LVL6:
 207              	.L14:
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 208              		.loc 1 191 5 is_stmt 1 view .LVU47
 209              	.LBB5:
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 210              		.loc 1 191 5 view .LVU48
 211 0054 0023     		movs	r3, #0
 212 0056 0293     		str	r3, [sp, #8]
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 213              		.loc 1 191 5 view .LVU49
 214 0058 0B4B     		ldr	r3, .L15+8
 215 005a 1A6B     		ldr	r2, [r3, #48]
 216 005c 42F00102 		orr	r2, r2, #1
 217 0060 1A63     		str	r2, [r3, #48]
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 218              		.loc 1 191 5 view .LVU50
 219 0062 1B6B     		ldr	r3, [r3, #48]
 220 0064 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/cchi0CAw.s 			page 9


 221 0068 0293     		str	r3, [sp, #8]
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 222              		.loc 1 191 5 view .LVU51
 223 006a 029B     		ldr	r3, [sp, #8]
 224              	.LBE5:
 191:Src/tim.c     ****     /**TIM3 GPIO Configuration
 225              		.loc 1 191 5 view .LVU52
 195:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 226              		.loc 1 195 5 view .LVU53
 195:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 227              		.loc 1 195 25 is_stmt 0 view .LVU54
 228 006c 4023     		movs	r3, #64
 229 006e 0393     		str	r3, [sp, #12]
 196:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 230              		.loc 1 196 5 is_stmt 1 view .LVU55
 196:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 231              		.loc 1 196 26 is_stmt 0 view .LVU56
 232 0070 0223     		movs	r3, #2
 233 0072 0493     		str	r3, [sp, #16]
 197:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 234              		.loc 1 197 5 is_stmt 1 view .LVU57
 198:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 235              		.loc 1 198 5 view .LVU58
 199:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 236              		.loc 1 199 5 view .LVU59
 199:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237              		.loc 1 199 31 is_stmt 0 view .LVU60
 238 0074 0793     		str	r3, [sp, #28]
 200:Src/tim.c     **** 
 239              		.loc 1 200 5 is_stmt 1 view .LVU61
 240 0076 03A9     		add	r1, sp, #12
 241 0078 0548     		ldr	r0, .L15+16
 242              	.LVL7:
 200:Src/tim.c     **** 
 243              		.loc 1 200 5 is_stmt 0 view .LVU62
 244 007a FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL8:
 246              		.loc 1 207 1 view .LVU63
 247 007e CEE7     		b	.L9
 248              	.L16:
 249              		.align	2
 250              	.L15:
 251 0080 00000140 		.word	1073807360
 252 0084 00040040 		.word	1073742848
 253 0088 00380240 		.word	1073887232
 254 008c 00100240 		.word	1073876992
 255 0090 00000240 		.word	1073872896
 256              		.cfi_endproc
 257              	.LFE137:
 259              		.section	.text.MX_TIM1_Init,"ax",%progbits
 260              		.align	1
 261              		.global	MX_TIM1_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	MX_TIM1_Init:
 267              	.LFB134:
ARM GAS  /tmp/cchi0CAw.s 			page 10


  32:Src/tim.c     **** 
 268              		.loc 1 32 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 72
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 10B5     		push	{r4, lr}
 273              	.LCFI7:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 4, -8
 276              		.cfi_offset 14, -4
 277 0002 92B0     		sub	sp, sp, #72
 278              	.LCFI8:
 279              		.cfi_def_cfa_offset 80
  38:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 280              		.loc 1 38 3 view .LVU65
  38:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 281              		.loc 1 38 27 is_stmt 0 view .LVU66
 282 0004 0024     		movs	r4, #0
 283 0006 1094     		str	r4, [sp, #64]
 284 0008 1194     		str	r4, [sp, #68]
  39:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 285              		.loc 1 39 3 is_stmt 1 view .LVU67
  39:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 286              		.loc 1 39 22 is_stmt 0 view .LVU68
 287 000a 0994     		str	r4, [sp, #36]
 288 000c 0A94     		str	r4, [sp, #40]
 289 000e 0B94     		str	r4, [sp, #44]
 290 0010 0C94     		str	r4, [sp, #48]
 291 0012 0D94     		str	r4, [sp, #52]
 292 0014 0E94     		str	r4, [sp, #56]
 293 0016 0F94     		str	r4, [sp, #60]
  40:Src/tim.c     **** 
 294              		.loc 1 40 3 is_stmt 1 view .LVU69
  40:Src/tim.c     **** 
 295              		.loc 1 40 34 is_stmt 0 view .LVU70
 296 0018 2022     		movs	r2, #32
 297 001a 2146     		mov	r1, r4
 298 001c 01A8     		add	r0, sp, #4
 299 001e FFF7FEFF 		bl	memset
 300              	.LVL9:
  45:Src/tim.c     ****   htim1.Init.Prescaler = 160;
 301              		.loc 1 45 3 is_stmt 1 view .LVU71
  45:Src/tim.c     ****   htim1.Init.Prescaler = 160;
 302              		.loc 1 45 18 is_stmt 0 view .LVU72
 303 0022 2348     		ldr	r0, .L27
 304 0024 234B     		ldr	r3, .L27+4
 305 0026 0360     		str	r3, [r0]
  46:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 306              		.loc 1 46 3 is_stmt 1 view .LVU73
  46:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 307              		.loc 1 46 24 is_stmt 0 view .LVU74
 308 0028 A023     		movs	r3, #160
 309 002a 4360     		str	r3, [r0, #4]
  47:Src/tim.c     ****   htim1.Init.Period = 25000;
 310              		.loc 1 47 3 is_stmt 1 view .LVU75
  47:Src/tim.c     ****   htim1.Init.Period = 25000;
 311              		.loc 1 47 26 is_stmt 0 view .LVU76
ARM GAS  /tmp/cchi0CAw.s 			page 11


 312 002c 8460     		str	r4, [r0, #8]
  48:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313              		.loc 1 48 3 is_stmt 1 view .LVU77
  48:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 314              		.loc 1 48 21 is_stmt 0 view .LVU78
 315 002e 46F2A813 		movw	r3, #25000
 316 0032 C360     		str	r3, [r0, #12]
  49:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 317              		.loc 1 49 3 is_stmt 1 view .LVU79
  49:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 318              		.loc 1 49 28 is_stmt 0 view .LVU80
 319 0034 0461     		str	r4, [r0, #16]
  50:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 320              		.loc 1 50 3 is_stmt 1 view .LVU81
  50:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 321              		.loc 1 50 32 is_stmt 0 view .LVU82
 322 0036 4461     		str	r4, [r0, #20]
  51:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 323              		.loc 1 51 3 is_stmt 1 view .LVU83
  51:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 324              		.loc 1 51 32 is_stmt 0 view .LVU84
 325 0038 8461     		str	r4, [r0, #24]
  52:Src/tim.c     ****   {
 326              		.loc 1 52 3 is_stmt 1 view .LVU85
  52:Src/tim.c     ****   {
 327              		.loc 1 52 7 is_stmt 0 view .LVU86
 328 003a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 329              	.LVL10:
  52:Src/tim.c     ****   {
 330              		.loc 1 52 6 discriminator 1 view .LVU87
 331 003e 0028     		cmp	r0, #0
 332 0040 2AD1     		bne	.L23
 333              	.L18:
  56:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 334              		.loc 1 56 3 is_stmt 1 view .LVU88
  56:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 335              		.loc 1 56 37 is_stmt 0 view .LVU89
 336 0042 0023     		movs	r3, #0
 337 0044 1093     		str	r3, [sp, #64]
  57:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 338              		.loc 1 57 3 is_stmt 1 view .LVU90
  57:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 339              		.loc 1 57 33 is_stmt 0 view .LVU91
 340 0046 1193     		str	r3, [sp, #68]
  58:Src/tim.c     ****   {
 341              		.loc 1 58 3 is_stmt 1 view .LVU92
  58:Src/tim.c     ****   {
 342              		.loc 1 58 7 is_stmt 0 view .LVU93
 343 0048 10A9     		add	r1, sp, #64
 344 004a 1948     		ldr	r0, .L27
 345 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 346              	.LVL11:
  58:Src/tim.c     ****   {
 347              		.loc 1 58 6 discriminator 1 view .LVU94
 348 0050 28BB     		cbnz	r0, .L24
 349              	.L19:
  62:Src/tim.c     ****   sConfigOC.Pulse = 1;
ARM GAS  /tmp/cchi0CAw.s 			page 12


 350              		.loc 1 62 3 is_stmt 1 view .LVU95
  62:Src/tim.c     ****   sConfigOC.Pulse = 1;
 351              		.loc 1 62 20 is_stmt 0 view .LVU96
 352 0052 6023     		movs	r3, #96
 353 0054 0993     		str	r3, [sp, #36]
  63:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 354              		.loc 1 63 3 is_stmt 1 view .LVU97
  63:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 355              		.loc 1 63 19 is_stmt 0 view .LVU98
 356 0056 0123     		movs	r3, #1
 357 0058 0A93     		str	r3, [sp, #40]
  64:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 358              		.loc 1 64 3 is_stmt 1 view .LVU99
  64:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 359              		.loc 1 64 24 is_stmt 0 view .LVU100
 360 005a 0022     		movs	r2, #0
 361 005c 0B92     		str	r2, [sp, #44]
  65:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 362              		.loc 1 65 3 is_stmt 1 view .LVU101
  65:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 363              		.loc 1 65 25 is_stmt 0 view .LVU102
 364 005e 0C92     		str	r2, [sp, #48]
  66:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 365              		.loc 1 66 3 is_stmt 1 view .LVU103
  66:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 366              		.loc 1 66 24 is_stmt 0 view .LVU104
 367 0060 0D92     		str	r2, [sp, #52]
  67:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 368              		.loc 1 67 3 is_stmt 1 view .LVU105
  67:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 369              		.loc 1 67 25 is_stmt 0 view .LVU106
 370 0062 0E92     		str	r2, [sp, #56]
  68:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 371              		.loc 1 68 3 is_stmt 1 view .LVU107
  68:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 372              		.loc 1 68 26 is_stmt 0 view .LVU108
 373 0064 0F92     		str	r2, [sp, #60]
  69:Src/tim.c     ****   {
 374              		.loc 1 69 3 is_stmt 1 view .LVU109
  69:Src/tim.c     ****   {
 375              		.loc 1 69 7 is_stmt 0 view .LVU110
 376 0066 09A9     		add	r1, sp, #36
 377 0068 1148     		ldr	r0, .L27
 378 006a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 379              	.LVL12:
  69:Src/tim.c     ****   {
 380              		.loc 1 69 6 discriminator 1 view .LVU111
 381 006e C8B9     		cbnz	r0, .L25
 382              	.L20:
  73:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 383              		.loc 1 73 3 is_stmt 1 view .LVU112
  73:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 384              		.loc 1 73 40 is_stmt 0 view .LVU113
 385 0070 0023     		movs	r3, #0
 386 0072 0193     		str	r3, [sp, #4]
  74:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 387              		.loc 1 74 3 is_stmt 1 view .LVU114
ARM GAS  /tmp/cchi0CAw.s 			page 13


  74:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 388              		.loc 1 74 41 is_stmt 0 view .LVU115
 389 0074 0293     		str	r3, [sp, #8]
  75:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 390              		.loc 1 75 3 is_stmt 1 view .LVU116
  75:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 391              		.loc 1 75 34 is_stmt 0 view .LVU117
 392 0076 0393     		str	r3, [sp, #12]
  76:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 393              		.loc 1 76 3 is_stmt 1 view .LVU118
  76:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 394              		.loc 1 76 33 is_stmt 0 view .LVU119
 395 0078 0493     		str	r3, [sp, #16]
  77:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 396              		.loc 1 77 3 is_stmt 1 view .LVU120
  77:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 397              		.loc 1 77 35 is_stmt 0 view .LVU121
 398 007a 0593     		str	r3, [sp, #20]
  78:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 399              		.loc 1 78 3 is_stmt 1 view .LVU122
  78:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 400              		.loc 1 78 38 is_stmt 0 view .LVU123
 401 007c 4FF40052 		mov	r2, #8192
 402 0080 0692     		str	r2, [sp, #24]
  79:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 403              		.loc 1 79 3 is_stmt 1 view .LVU124
  79:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 404              		.loc 1 79 40 is_stmt 0 view .LVU125
 405 0082 0893     		str	r3, [sp, #32]
  80:Src/tim.c     ****   {
 406              		.loc 1 80 3 is_stmt 1 view .LVU126
  80:Src/tim.c     ****   {
 407              		.loc 1 80 7 is_stmt 0 view .LVU127
 408 0084 01A9     		add	r1, sp, #4
 409 0086 0A48     		ldr	r0, .L27
 410 0088 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 411              	.LVL13:
  80:Src/tim.c     ****   {
 412              		.loc 1 80 6 discriminator 1 view .LVU128
 413 008c 68B9     		cbnz	r0, .L26
 414              	.L21:
  87:Src/tim.c     **** 
 415              		.loc 1 87 3 is_stmt 1 view .LVU129
 416 008e 0848     		ldr	r0, .L27
 417 0090 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 418              	.LVL14:
  89:Src/tim.c     **** /* TIM3 init function */
 419              		.loc 1 89 1 is_stmt 0 view .LVU130
 420 0094 12B0     		add	sp, sp, #72
 421              	.LCFI9:
 422              		.cfi_remember_state
 423              		.cfi_def_cfa_offset 8
 424              		@ sp needed
 425 0096 10BD     		pop	{r4, pc}
 426              	.L23:
 427              	.LCFI10:
 428              		.cfi_restore_state
ARM GAS  /tmp/cchi0CAw.s 			page 14


  54:Src/tim.c     ****   }
 429              		.loc 1 54 5 is_stmt 1 view .LVU131
 430 0098 FFF7FEFF 		bl	Error_Handler
 431              	.LVL15:
 432 009c D1E7     		b	.L18
 433              	.L24:
  60:Src/tim.c     ****   }
 434              		.loc 1 60 5 view .LVU132
 435 009e FFF7FEFF 		bl	Error_Handler
 436              	.LVL16:
 437 00a2 D6E7     		b	.L19
 438              	.L25:
  71:Src/tim.c     ****   }
 439              		.loc 1 71 5 view .LVU133
 440 00a4 FFF7FEFF 		bl	Error_Handler
 441              	.LVL17:
 442 00a8 E2E7     		b	.L20
 443              	.L26:
  82:Src/tim.c     ****   }
 444              		.loc 1 82 5 view .LVU134
 445 00aa FFF7FEFF 		bl	Error_Handler
 446              	.LVL18:
 447 00ae EEE7     		b	.L21
 448              	.L28:
 449              		.align	2
 450              	.L27:
 451 00b0 00000000 		.word	htim1
 452 00b4 00000140 		.word	1073807360
 453              		.cfi_endproc
 454              	.LFE134:
 456              		.section	.text.MX_TIM3_Init,"ax",%progbits
 457              		.align	1
 458              		.global	MX_TIM3_Init
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 463              	MX_TIM3_Init:
 464              	.LFB135:
  92:Src/tim.c     **** 
 465              		.loc 1 92 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 40
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 00B5     		push	{lr}
 470              	.LCFI11:
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 14, -4
 473 0002 8BB0     		sub	sp, sp, #44
 474              	.LCFI12:
 475              		.cfi_def_cfa_offset 48
  98:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 476              		.loc 1 98 3 view .LVU136
  98:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 477              		.loc 1 98 27 is_stmt 0 view .LVU137
 478 0004 0023     		movs	r3, #0
 479 0006 0893     		str	r3, [sp, #32]
 480 0008 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/cchi0CAw.s 			page 15


  99:Src/tim.c     **** 
 481              		.loc 1 99 3 is_stmt 1 view .LVU138
  99:Src/tim.c     **** 
 482              		.loc 1 99 22 is_stmt 0 view .LVU139
 483 000a 0193     		str	r3, [sp, #4]
 484 000c 0293     		str	r3, [sp, #8]
 485 000e 0393     		str	r3, [sp, #12]
 486 0010 0493     		str	r3, [sp, #16]
 487 0012 0593     		str	r3, [sp, #20]
 488 0014 0693     		str	r3, [sp, #24]
 489 0016 0793     		str	r3, [sp, #28]
 104:Src/tim.c     ****   htim3.Init.Prescaler = 3231;
 490              		.loc 1 104 3 is_stmt 1 view .LVU140
 104:Src/tim.c     ****   htim3.Init.Prescaler = 3231;
 491              		.loc 1 104 18 is_stmt 0 view .LVU141
 492 0018 1848     		ldr	r0, .L37
 493 001a 194A     		ldr	r2, .L37+4
 494 001c 0260     		str	r2, [r0]
 105:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 495              		.loc 1 105 3 is_stmt 1 view .LVU142
 105:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 496              		.loc 1 105 24 is_stmt 0 view .LVU143
 497 001e 40F69F42 		movw	r2, #3231
 498 0022 4260     		str	r2, [r0, #4]
 106:Src/tim.c     ****   htim3.Init.Period = 99;
 499              		.loc 1 106 3 is_stmt 1 view .LVU144
 106:Src/tim.c     ****   htim3.Init.Period = 99;
 500              		.loc 1 106 26 is_stmt 0 view .LVU145
 501 0024 8360     		str	r3, [r0, #8]
 107:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 502              		.loc 1 107 3 is_stmt 1 view .LVU146
 107:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 503              		.loc 1 107 21 is_stmt 0 view .LVU147
 504 0026 6322     		movs	r2, #99
 505 0028 C260     		str	r2, [r0, #12]
 108:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 506              		.loc 1 108 3 is_stmt 1 view .LVU148
 108:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 507              		.loc 1 108 28 is_stmt 0 view .LVU149
 508 002a 0361     		str	r3, [r0, #16]
 109:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 509              		.loc 1 109 3 is_stmt 1 view .LVU150
 109:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 510              		.loc 1 109 32 is_stmt 0 view .LVU151
 511 002c 8361     		str	r3, [r0, #24]
 110:Src/tim.c     ****   {
 512              		.loc 1 110 3 is_stmt 1 view .LVU152
 110:Src/tim.c     ****   {
 513              		.loc 1 110 7 is_stmt 0 view .LVU153
 514 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 515              	.LVL19:
 110:Src/tim.c     ****   {
 516              		.loc 1 110 6 discriminator 1 view .LVU154
 517 0032 C8B9     		cbnz	r0, .L34
 518              	.L30:
 114:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 519              		.loc 1 114 3 is_stmt 1 view .LVU155
ARM GAS  /tmp/cchi0CAw.s 			page 16


 114:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 520              		.loc 1 114 37 is_stmt 0 view .LVU156
 521 0034 0023     		movs	r3, #0
 522 0036 0893     		str	r3, [sp, #32]
 115:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 523              		.loc 1 115 3 is_stmt 1 view .LVU157
 115:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 524              		.loc 1 115 33 is_stmt 0 view .LVU158
 525 0038 0993     		str	r3, [sp, #36]
 116:Src/tim.c     ****   {
 526              		.loc 1 116 3 is_stmt 1 view .LVU159
 116:Src/tim.c     ****   {
 527              		.loc 1 116 7 is_stmt 0 view .LVU160
 528 003a 08A9     		add	r1, sp, #32
 529 003c 0F48     		ldr	r0, .L37
 530 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 531              	.LVL20:
 116:Src/tim.c     ****   {
 532              		.loc 1 116 6 discriminator 1 view .LVU161
 533 0042 A0B9     		cbnz	r0, .L35
 534              	.L31:
 120:Src/tim.c     ****   sConfigOC.Pulse = 5;
 535              		.loc 1 120 3 is_stmt 1 view .LVU162
 120:Src/tim.c     ****   sConfigOC.Pulse = 5;
 536              		.loc 1 120 20 is_stmt 0 view .LVU163
 537 0044 6023     		movs	r3, #96
 538 0046 0193     		str	r3, [sp, #4]
 121:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 539              		.loc 1 121 3 is_stmt 1 view .LVU164
 121:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 540              		.loc 1 121 19 is_stmt 0 view .LVU165
 541 0048 0523     		movs	r3, #5
 542 004a 0293     		str	r3, [sp, #8]
 122:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 543              		.loc 1 122 3 is_stmt 1 view .LVU166
 122:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 544              		.loc 1 122 24 is_stmt 0 view .LVU167
 545 004c 0022     		movs	r2, #0
 546 004e 0392     		str	r2, [sp, #12]
 123:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 547              		.loc 1 123 3 is_stmt 1 view .LVU168
 123:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 548              		.loc 1 123 24 is_stmt 0 view .LVU169
 549 0050 0592     		str	r2, [sp, #20]
 124:Src/tim.c     ****   {
 550              		.loc 1 124 3 is_stmt 1 view .LVU170
 124:Src/tim.c     ****   {
 551              		.loc 1 124 7 is_stmt 0 view .LVU171
 552 0052 01A9     		add	r1, sp, #4
 553 0054 0948     		ldr	r0, .L37
 554 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 555              	.LVL21:
 124:Src/tim.c     ****   {
 556              		.loc 1 124 6 discriminator 1 view .LVU172
 557 005a 58B9     		cbnz	r0, .L36
 558              	.L32:
 131:Src/tim.c     **** 
ARM GAS  /tmp/cchi0CAw.s 			page 17


 559              		.loc 1 131 3 is_stmt 1 view .LVU173
 560 005c 0748     		ldr	r0, .L37
 561 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 562              	.LVL22:
 133:Src/tim.c     **** 
 563              		.loc 1 133 1 is_stmt 0 view .LVU174
 564 0062 0BB0     		add	sp, sp, #44
 565              	.LCFI13:
 566              		.cfi_remember_state
 567              		.cfi_def_cfa_offset 4
 568              		@ sp needed
 569 0064 5DF804FB 		ldr	pc, [sp], #4
 570              	.L34:
 571              	.LCFI14:
 572              		.cfi_restore_state
 112:Src/tim.c     ****   }
 573              		.loc 1 112 5 is_stmt 1 view .LVU175
 574 0068 FFF7FEFF 		bl	Error_Handler
 575              	.LVL23:
 576 006c E2E7     		b	.L30
 577              	.L35:
 118:Src/tim.c     ****   }
 578              		.loc 1 118 5 view .LVU176
 579 006e FFF7FEFF 		bl	Error_Handler
 580              	.LVL24:
 581 0072 E7E7     		b	.L31
 582              	.L36:
 126:Src/tim.c     ****   }
 583              		.loc 1 126 5 view .LVU177
 584 0074 FFF7FEFF 		bl	Error_Handler
 585              	.LVL25:
 586 0078 F0E7     		b	.L32
 587              	.L38:
 588 007a 00BF     		.align	2
 589              	.L37:
 590 007c 00000000 		.word	htim3
 591 0080 00040040 		.word	1073742848
 592              		.cfi_endproc
 593              	.LFE135:
 595              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_TIM_PWM_MspDeInit
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 602              	HAL_TIM_PWM_MspDeInit:
 603              	.LVL26:
 604              	.LFB138:
 208:Src/tim.c     **** 
 209:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 210:Src/tim.c     **** {
 605              		.loc 1 210 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 211:Src/tim.c     **** 
ARM GAS  /tmp/cchi0CAw.s 			page 18


 212:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM1)
 610              		.loc 1 212 3 view .LVU179
 611              		.loc 1 212 19 is_stmt 0 view .LVU180
 612 0000 0368     		ldr	r3, [r0]
 613              		.loc 1 212 5 view .LVU181
 614 0002 0A4A     		ldr	r2, .L44
 615 0004 9342     		cmp	r3, r2
 616 0006 03D0     		beq	.L42
 213:Src/tim.c     ****   {
 214:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 215:Src/tim.c     **** 
 216:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 217:Src/tim.c     ****     /* Peripheral clock disable */
 218:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 219:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 220:Src/tim.c     **** 
 221:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 222:Src/tim.c     ****   }
 223:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM3)
 617              		.loc 1 223 8 is_stmt 1 view .LVU182
 618              		.loc 1 223 10 is_stmt 0 view .LVU183
 619 0008 094A     		ldr	r2, .L44+4
 620 000a 9342     		cmp	r3, r2
 621 000c 07D0     		beq	.L43
 622              	.L39:
 224:Src/tim.c     ****   {
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 226:Src/tim.c     **** 
 227:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 228:Src/tim.c     ****     /* Peripheral clock disable */
 229:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 230:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 231:Src/tim.c     **** 
 232:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 233:Src/tim.c     ****   }
 234:Src/tim.c     **** }
 623              		.loc 1 234 1 view .LVU184
 624 000e 7047     		bx	lr
 625              	.L42:
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 626              		.loc 1 218 5 is_stmt 1 view .LVU185
 627 0010 02F59C32 		add	r2, r2, #79872
 628 0014 536C     		ldr	r3, [r2, #68]
 629 0016 23F00103 		bic	r3, r3, #1
 630 001a 5364     		str	r3, [r2, #68]
 631 001c 7047     		bx	lr
 632              	.L43:
 229:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 633              		.loc 1 229 5 view .LVU186
 634 001e 02F50D32 		add	r2, r2, #144384
 635 0022 136C     		ldr	r3, [r2, #64]
 636 0024 23F00203 		bic	r3, r3, #2
 637 0028 1364     		str	r3, [r2, #64]
 638              		.loc 1 234 1 is_stmt 0 view .LVU187
 639 002a F0E7     		b	.L39
 640              	.L45:
 641              		.align	2
ARM GAS  /tmp/cchi0CAw.s 			page 19


 642              	.L44:
 643 002c 00000140 		.word	1073807360
 644 0030 00040040 		.word	1073742848
 645              		.cfi_endproc
 646              	.LFE138:
 648              		.global	htim3
 649              		.section	.bss.htim3,"aw",%nobits
 650              		.align	2
 653              	htim3:
 654 0000 00000000 		.space	72
 654      00000000 
 654      00000000 
 654      00000000 
 654      00000000 
 655              		.global	htim1
 656              		.section	.bss.htim1,"aw",%nobits
 657              		.align	2
 660              	htim1:
 661 0000 00000000 		.space	72
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.text
 663              	.Letext0:
 664              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 665              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 666              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 667              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 668              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 669              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 670              		.file 8 "Inc/tim.h"
 671              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 672              		.file 10 "Inc/main.h"
 673              		.file 11 "<built-in>"
ARM GAS  /tmp/cchi0CAw.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/cchi0CAw.s:21     .text.HAL_TIM_PWM_MspInit:00000000 $t
     /tmp/cchi0CAw.s:27     .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
     /tmp/cchi0CAw.s:105    .text.HAL_TIM_PWM_MspInit:00000048 $d
     /tmp/cchi0CAw.s:112    .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/cchi0CAw.s:118    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/cchi0CAw.s:251    .text.HAL_TIM_MspPostInit:00000080 $d
     /tmp/cchi0CAw.s:260    .text.MX_TIM1_Init:00000000 $t
     /tmp/cchi0CAw.s:266    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/cchi0CAw.s:451    .text.MX_TIM1_Init:000000b0 $d
     /tmp/cchi0CAw.s:660    .bss.htim1:00000000 htim1
     /tmp/cchi0CAw.s:457    .text.MX_TIM3_Init:00000000 $t
     /tmp/cchi0CAw.s:463    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/cchi0CAw.s:590    .text.MX_TIM3_Init:0000007c $d
     /tmp/cchi0CAw.s:653    .bss.htim3:00000000 htim3
     /tmp/cchi0CAw.s:596    .text.HAL_TIM_PWM_MspDeInit:00000000 $t
     /tmp/cchi0CAw.s:602    .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
     /tmp/cchi0CAw.s:643    .text.HAL_TIM_PWM_MspDeInit:0000002c $d
     /tmp/cchi0CAw.s:650    .bss.htim3:00000000 $d
     /tmp/cchi0CAw.s:657    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
memset
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
